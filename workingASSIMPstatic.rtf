{\rtf1\ansi\ansicpg1250\deff0\nouicompat\deflang1051{\fonttbl{\f0\fmodern JetBrains Mono;}{\f1\fnil\fcharset0 Calibri;}}
{\colortbl ;\red171\green157\blue242;\red0\green0\blue0;\red87\green209\blue235;\red255\green216\blue102;\red172\green172\blue172;\red249\green246\blue239;\red255\green189\blue206;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf1\highlight2\f0\fs20\lang9 cmake_minimum_required\cf3 (\cf4 VERSION 3.20\cf3 )\line\cf1 project\cf3 (\cf4 ROGL \cf3 )\line\cf5 #set (CMAKE_MODULE_PATH $\{CMAKE_MODULE_PATH\} "$\{PROJECT_SOURCE_DIR\}/cmake/modules/")\line\line\cf1 set\cf3 (\cf4 CMAKE_CXX_STANDARD 23\cf3 )\line\cf1 set\cf3 (\cf4 CMAKE_FIND_DEBUG_MODE TRUE\cf3 ) \cf5 #to write searched paths in console\line\line\line #ASSIMP\line #set(assimp_DIR "C:/Libs/AssimpV/Assimp/lib/cmake/assimp-5.2")\line #set(assimp_DIR "C:/Program Files (x86)/Assimp/lib/cmake/assimp-5.2/")\line #set(assimp_ROOT_DIR "C:/Libs/AssimpV/Assimp/")\line #set(assimp_ROOT_DIR "C:/Program Files (x86)/Assimp")\line #idk why it ignores paths, if i delete msys64 fodler it works, or better specify 5.2 and no need to delete\line #better use just PATH and modules dir, no need to add version then\line\line #find_package(assimp PATHS "C:/Program Files (x86)/Assimp/")\line\line\line #find_package(assimp 5.2 REQUIRED PATHS C:/Libs/AssimpV/Assimp/lib/cmake/assimp-5.2/)\line\line\line\line\cf1 include_directories\cf3 (\cf4 C:/Libs/AssimpNew/contrib/zlib/\cf3 )\line\cf1 include_directories\cf3 (\cf4 C:/Libs/AssimpNew/contrib/zlib/contrib/minizip/\cf3 )\line\cf5 #include_directories(C:/Libs/AssimpNew/)\line\cf1 include_directories\cf3 (\cf4 C:/Libs/AssimpNew/code\cf3 )\line\cf1 set\cf3 (\cf4 ASSIMP_INCLUDE_DIR  \cf6 "\cf4 C:/Libs/AssimpNew/cmake-build-debug/incude/\cf6 "\cf3 )\line\cf1 set\cf3 (\cf4 ASSIMP_LIBRARY \cf6 "\cf4 C:/Libs/AssimpNew/cmake-build-debug/lib/libassimpd.a\cf6 "\cf3 )\line\cf1 set\cf3 (\cf4 ZLIB \cf6 "\cf4 C:/msys64/mingw64/lib/libz.a\cf6 "\cf3 )\line\cf1 set\cf3 (\cf4 MINI \cf6 "\cf4 C:/msys64/mingw64/lib/libminizip.a\cf6 "\cf3 )\line\line\line\line\cf1 include_directories\cf3 (\cf4 ASSIMP_INCLUDE_DIR\cf3 )\line\cf1 link_directories\cf3 (\cf7 $\{\cf4 ASSIMP_LIBRARY\cf7\}\cf3 )\line\line\cf1 set\cf3 (\cf4 ZLIBSTATIC \cf6 "\cf4 C:/Libs/AssimpNew/cmake-build-debug/contrib/zlib/libzlibstaticd.a\cf6 "\cf3 )\line\cf1 include_directories\cf3 (\cf4 C:/Libs/AssimpNew/cmake-build-debug/contrib/zlib\cf3 )\line\line\cf1 set\cf3 (\cf4 ZLIB2 \cf6 "\cf4 c:/Program Files (x86)/Assimp/lib/libzlibstaticd.a\cf6 "\cf3 )\line\line\cf1 find_package\cf3 (\cf4 ASSIMP 5.2 PATHS \cf6 "\cf4 C:/Program Files (x86)/Assimp/\cf6 "\cf3 )\line\line\cf5 #add_library(unzip C:/Libs/AssimpNew/contrib/unzip/unzip.c  C:/Libs/AssimpNew/contrib/unzip/ioapi.c C:/Libs/AssimpNew/contrib/unzip/crypt.c\line #        C:/Libs/AssimpNew/contrib/unzip/unzip.h  C:/Libs/AssimpNew/contrib/unzip/ioapi.h C:/Libs/AssimpNew/contrib/unzip/crypt.h\line #        )\line\line #add_library(zliblib C:/Libs/AssimpNew/contrib/unzip/unzip.c  C:/Libs/AssimpNew/contrib/unzip/ioapi.c C:/Libs/AssimpNew/contrib/unzip/crypt.c\line #        C:/Libs/AssimpNew/contrib/unzip/unzip.h  C:/Libs/AssimpNew/contrib/unzip/ioapi.h C:/Libs/AssimpNew/contrib/unzip/crypt.h\line #        )\line\line #include_directories("C:/Program Files (x86)/Assimp")\line\line #GLEW\line #set(GLEW_LIBRARIES_DIR "C:/Libs/glew-2.2.0/lib/Release/x64/")\line #set(GLEW_LIBRARIES "C:/Libs/glew-2.2.0/lib/Release/x64/libglew32.a")\line #set(GLEW_LIBRARIES "C:/msys64/usr/bin/libglew32.a")\line #set(GLEW_LIBRARIES "C:/msys64/mingw64/lib/libglew32.a")\line\line #set(GLEW_INCLUDE_DIRS "C:/msys64/mingw64/include/GL")\line #set(GLEW_INCLUDE_DIRS "C:/msys64/usr/include/GL/")\line #find_package(GLEW REQUIRED )\line #set(glew_DIR "C:/Libs/glew-2.2.0/")\line #add_library(GLEW  STATIC GLEW_LIBRARIES) #works only on source files\line #include_directories($\{GLEW_INCLUDE_DIRS\})\line\line\line #GLAD\line\cf1 set\cf3 (\cf4 GLAD_INCLUDE_DIR C:/Libs/GLAD_c_46/include/\cf3 )\line\cf1 add_library\cf3 (\cf4 GLAD_S_LIB  C:/Libs/GLAD_c_46/src/glad.c \cf3 )\line\cf1 include_directories\cf3 (\cf7 $\{\cf4 GLAD_INCLUDE_DIR\cf7\}\cf3 )\line\line\line\cf5 #link_libraries($\{GLEW_LIBRARIES\})\line #link_directories(GLEW_LIBRARIES_DIR)\line\line\line #GLFW\line\cf1 set\cf3 (\cf4 GLFW3_INCLUDE_DIR  \cf6 "\cf4 C:/Libs/GLFW338/include/\cf6 "\cf3 )\line\cf1 set\cf3 (\cf4 GLFW3_LIBRARY  \cf6 "\cf4 C:/Libs/GLFW338/lib-mingw-w64/libglfw3.a\cf6 "\cf3 )\line\cf1 set\cf3 (\cf4 GLFW3_LIB C:/Libs/GLFW338/lib-mingw-w64\cf3 )\line\line\cf1 include_directories\cf3 (\cf7 $\{\cf4 GLFW3_INCLUDE_DIR\cf7\}\cf3 )\line\cf1 link_directories\cf3 (\cf7 $\{\cf4 GLFW3_LIB\cf7\}\cf3 )\line\line\cf5 #GLM\line\cf1 set\cf3 (\cf4 GLM_INCLUDE_DIR \cf6 "\cf4 C:/Libs/GLM\cf6 "\cf3 )\line\cf1 include_directories\cf3 (\cf7 $\{\cf4 GLM_INCLUDE_DIR\cf7\}\cf3 )\line\line\cf5 #IMGUI\line\cf1 set\cf3 (\cf4 IMGUI_LIB_NAME C:/Libs/imgui_187/\cf3 ) \cf5 #1.87\line\line\cf1 set\cf3 (\cf4 IMGUI_SOURCES\line         \cf6 "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /imgui.cpp\cf6 "\line         "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /imgui_draw.cpp\cf6 "\line         "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /imgui_widgets.cpp\cf6 "\line         "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /imgui_tables.cpp\cf6 " \cf5 #new in 187\line         #"$\{IMGUI_LIB_NAME\}/imgui_impl_glfw.cpp" #1.79\line         #"$\{IMGUI_LIB_NAME\}/imgui_impl_opengl3.cpp" #1.79\line         \cf6 "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /backends/imgui_impl_glfw.cpp\cf6 "\line         "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /backends/imgui_impl_opengl3.cpp\cf6 "\line         \cf3 )\line\line\cf1 set\cf3 (\cf4 IMGUI_HEADERS\line         \cf6 "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /imconfig.h\cf6 "\line         "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /imgui.h\cf6 "\line         "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /imgui_internal.h\cf6 "\line         "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /imstb_rectpack.h\cf6 "\line         "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /imstb_textedit.h\cf6 "\line         "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /imstb_truetype.h\cf6 "\line         \cf5 #"$\{IMGUI_LIB_NAME\}/imgui_impl_glfw.h" #1.79\line         #"$\{IMGUI_LIB_NAME\}/imgui_impl_opengl3.h" #1.79\line         \cf6 "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /backends/imgui_impl_glfw.h\cf6 "\line         "\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf4 /backends/imgui_impl_opengl3.h\cf6 "\line         \cf3 )\line\cf1 add_library\cf3 (\cf4 IMGUI_LIB \cf7 $\{\cf4 IMGUI_SOURCES\cf7\} $\{\cf4 IMGUI_HEADERS\cf7\}\cf3 )\line\cf1 include_directories\cf3 (\cf7 $\{\cf4 IMGUI_LIB_NAME\cf7\}\cf3 )\line\line\cf5 #mozno este FileDialog a stb_image\line # opisat co sa zmenilo\line #set all libs that we want to be linked\line\cf1 set\cf3 (\cf4 LINK_LIBS \cf7 $\{\cf4 ZLIB2\cf7\} $\{\cf4 GLFW3_LIBRARY\cf7\} \cf4 GLAD_S_LIB   \cf7 $\{\cf4 IMGUI_INCLUDE_DIR\cf7\} $\{\cf4 IMGUI_LIB\cf7\}  \cf3 )\line\cf5 #trying to get rid of needing dynamic dlls,didnt work easily sadly\line # assimp::zlibstatic $\{ASSIMP_LIBRARY\}\line\line #find_package(IMGUI REQUIRED )\line #find_package(GLFW REQUIRED )\line\line #target_sources(ROGL PRIVATE main.cpp)\line\cf1 add_executable\cf3 (\cf4 ROGL main.cpp\cf3 )\line\line\line\cf1 include_directories\cf3 (\cf4 Source\cf3 )\line\cf1 add_subdirectory\cf3 (\cf6 "\cf4 Source\cf6 "\cf3 )\line\cf5 #target_link_libraries(ROGL assimp::assimp)\line #target_link_libraries(ROGL  $\{GLEW_LIBRARIES\})\line #or\line #target_link_libraries(ROGL  assimp::assimp $\{GLEW_LIBRARIES\})\line #or:\line\cf1 target_link_libraries\cf3 (\cf4 ROGL PUBLIC assimp::assimp \cf7 $\{\cf4 LINK_LIBS\cf7\} \cf3 )\line\cf5 #target_link_libraries(ROGL PUBLIC  z )\line #mozno este -static-lz\line\cf1 target_link_options\cf3 (\cf4 ROGL PRIVATE  -static-libgcc -static-libstdc++ -Wl,-Bdynamic -lwinpthread -lassimp\cf3 )\line\cf5 #target_link_libraries(ROGL PUBLIC $\{GLEW_LIBRARIES\})\line\line #pridanie z to fixlo teraz musime len pridat thready\par

\pard\sa200\sl276\slmult1\cf0\f1\fs22\par
}
 